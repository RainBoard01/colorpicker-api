type Palette {
  _id: ID! @auth(requires: ADMIN)
  paletteName: String!
  colors: [Color]
  user: User
  id: ID!
  emoji: String!
  _ts: Long!
}

# Allow manipulating the relationship between the types 'Palette' and 'Color'.
input PaletteColorsRelation {
  # Create one or more documents of type 'Color' and associate them with the current document.
  create: [ColorInput]

  # Connect one or more documents of type 'Color' with the current document using their IDs.
  connect: [ID]

  # Disconnect the given documents of type 'Color' from the current document using their IDs.
  disconnect: [ID]
}

# Allow manipulating the relationship between the types 'Palette' and 'User' using the field 'Color.palette'.
input PaletteUserRelation {
  # Create a document of type 'User' and associate it with the current document.
  create: UserInput

  # Connect a document of type 'User' with the current document using its ID.
  connect: ID
}

# 'Palette' input values
input PaletteInput {
  paletteName: String!
  id: ID!
  emoji: String!
  colors: PaletteColorsRelation
  user: PaletteUserRelation
}

# 'Palette' input values
input PartialUpdatePaletteInput {
  paletteName: String
  id: ID
  emoji: String
  colors: PaletteColorsRelation
  user: PaletteUserRelation
}
